# HTTP â†’ HTTPS redirection (port 80)
server {
    listen 80;
    server_name $SUBDOMAIN_HOSTNAME;

    # Allow ACME challenge requests (for certbot webroot)
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
    }

    # Redirect all other traffic to HTTPS
    return 301 https://$host$request_uri;
}

# Main HTTPS server (port 443)
server {
    listen      443 ssl;
    server_name $SUBDOMAIN_HOSTNAME;
    http2       on;

    # Let's Encrypt SSL Configuration
    ssl_certificate     /etc/letsencrypt/live/$host/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$host/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_conf_command Ciphersuites TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;

    ssl_prefer_server_ciphers on;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1h;

    # OCSP Stapling
    ssl_stapling        on;
    ssl_stapling_verify on;

    # Reverse proxy to OpenVSCode Server
    location / {
        include conf.d/ws_params.conf;

        # Handle WebSocket upgrade
        if ($http_upgrade = "websocket") {
            proxy_pass http://$OPENVSCODE_SERVER_IP:8000;
            break;
        }

        # Check for folder query parameter
        error_page 418 = @redirect_with_folder;
        if ($arg_folder = "") {
            return 418;
        }

        proxy_pass http://$OPENVSCODE_SERVER_IP:8000;
    }

    # Redirect with added `folder` query parameter
    location @redirect_with_folder {
        if ($args = "") {
            return 302 https://$host$uri?folder=$WORKSPACE_PATH;
        }
        return 302 https://$host$uri?$args&folder=$WORKSPACE_PATH;
    }
}
